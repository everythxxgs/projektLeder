openapi: 3.0.2
info:
  title: VHS Course Management API
  description: API for managing courses and registrations at the Volkshochschule
  version: 1.0.0
  contact:
    name: VHS IT Support
    email: support@vhs-example.com

servers:
  - url: http://localhost:3000
    description: Local development server

paths:
  /api/kurse:
    get:
      summary: Search for courses
      description: Search for courses using various filters
      parameters:
        - name: fachbereich
          in: query
          schema:
            type: integer
          description: Department ID to filter by
        - name: kursform
          in: query
          schema:
            type: integer
          description: Course type ID to filter by
        - name: tag
          in: query
          schema:
            type: string
          description: Day of the week (e.g., "Montag", "Dienstag")
        - name: beginndatum
          in: query
          schema:
            type: string
            format: date
          description: Start date to filter courses from
        - name: suchbegriff
          in: query
          schema:
            type: string
          description: Search term for course title or description
      responses:
        '200':
          description: List of courses matching the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/anmeldung:
    post:
      summary: Register for a course
      description: Register a new participant for a specific course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - teilnehmer
                - kursnr
              properties:
                teilnehmer:
                  $ref: '#/components/schemas/ParticipantInput'
                kursnr:
                  type: string
                  pattern: '^[A-Z]{2}[0-9]{3}$'
                  example: 'SP101'
      responses:
        '201':
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Successfully registered for course'
                  teilnehmernr:
                    type: integer
                    example: 1234
                  kursnr:
                    type: string
                    example: 'SP101'
        '400':
          description: Invalid input or course is full
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/fachbereiche:
    get:
      summary: Get all departments
      description: Retrieve a list of all available departments
      responses:
        '200':
          description: List of departments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/kursformen:
    get:
      summary: Get all course types
      description: Retrieve a list of all available course types
      responses:
        '200':
          description: List of course types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseType'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Course:
      type: object
      properties:
        kursnr:
          type: string
          example: 'SP101'
        kursbezeichnung:
          type: string
          example: 'Englisch A1 für Anfänger'
        kursbeschreibung:
          type: string
          example: 'Grundkurs für absolute Anfänger'
        minteilnehmer:
          type: integer
          example: 8
        maxteilnehmer:
          type: integer
          example: 15
        veranstaltungen:
          type: integer
          example: 15
        stunden:
          type: integer
          example: 30
        beginndatum:
          type: string
          format: date
          example: '2025-03-01'
        tag:
          type: string
          example: 'Montag'
        anfangszeit:
          type: string
          pattern: '^([0-1][0-9]|2[0-3]):[0-5][0-9]$'
          example: '18:00'
        endzeit:
          type: string
          pattern: '^([0-1][0-9]|2[0-3]):[0-5][0-9]$'
          example: '19:30'
        kursgebuehr:
          type: number
          format: float
          example: 120.00
        dozent_nachname:
          type: string
          example: 'Schmidt'
        dozent_vorname:
          type: string
          example: 'Maria'
        raum_bezeichnung:
          type: string
          example: 'Raum 101'
        fachbereich_bezeichnung:
          type: string
          example: 'Sprachen'
        kursform_bezeichnung:
          type: string
          example: 'Semesterkurs'

    ParticipantInput:
      type: object
      required:
        - nachname
        - vorname
        - geschlecht
        - strasse
        - plz
        - ort
        - altersgruppe
      properties:
        nachname:
          type: string
          example: 'Müller'
        vorname:
          type: string
          example: 'Hans'
        geschlecht:
          type: string
          enum: ['m', 'w', 'd']
          example: 'm'
        strasse:
          type: string
          example: 'Hauptstraße 1'
        plz:
          type: string
          pattern: '^[0-9]{5}$'
          example: '12345'
        ort:
          type: string
          example: 'Berlin'
        telefon:
          type: string
          example: '030123456'
        altersgruppe:
          type: string
          enum: ['01', '02', '03', '04', '05', '06']
          example: '03'

    Department:
      type: object
      properties:
        fbnr:
          type: integer
          example: 1
        bezeichnung:
          type: string
          example: 'Sprachen'

    CourseType:
      type: object
      properties:
        kfnr:
          type: integer
          example: 1
        bezeichnung:
          type: string
          example: 'Semesterkurs'

    Error:
      type: object
      properties:
        error:
          type: string
          example: 'Database error'